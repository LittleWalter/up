.TH up 1 "April 8, 2025" "Version 1.0.0" "General Commands Manual"
.SH NAME
up — navigate ancestor directories and path histories: a companion to the builtin cd command
.SH SYNOPSIS
.B up
[\fIOPTIONS\fR] [\fIinteger|directory name/regex|$HOME\fR]
.SH DESCRIPTION
up is a shell script that takes the hassle out of navigating parent and ancestor directories.

Jump multiple levels by index or directory name with autocomplete and regex support. Inspect and dive into directories interactively with the popular fuzzy finder fzf—and optionally track your path history for seamless recall.

This tool is especially beneficial for terminal power users frequently navigating deep directory structures or switching between project paths.

Compatible with Bash and Zsh.
.SH OPTIONS
.TP
.B \-h, --help
Print help.
.TP
.B \-v, --verbose
Print additional information about directory changes.

.P
.SH PWD NAVIGATION OPTIONS
.TP
.B \-e, --ends-with
Jump to the nearest directory whose name matches a regex pattern that ends with \fI<string>\fR.

This option is equivalent to using \fB\-r\fR with a regex pattern that ends with \fB$\fR.
.TP
.B \-f, --fzf
Open `fzf` to browse paths within the current working directory (PWD), provided `fzf` is installed and available.
.TP
.B \-i, --ignore-case
Enable case-insensitive matching for regex navigation.
.TP
.B \-r, --regex
Jump to the nearest directory that matches the specified regex pattern.

Note: Regex behavior may differ slightly between \fBBash\fR and \fBZsh\fR due to variations in their respective regex engines. For consistent results, ensure your regex patterns are compatible with the shell you are using.
.TP
.B \-s, --starts-with
Jump to the nearest directory whose name matches a regex pattern that starts with \fI<string>\fR.

This option is equivalent to using \fB\-r\fR with a regex pattern that begins with \fB^\fR.
.TP
.B \-x, --exact
Jump to the nearest directory that exactly matches the specified \fI<string>\fR.

This is the default behavior when passing a string argument, provided \fB_UP_REGEX_DEFAULT\fR is not enabled. This option is particularly useful when regex matching is set as the default behavior, allowing you to override it for exact matches.
.P
.SH PATH HISTORY MANAGEMENT OPTIONS
.TP
.B \-F, --fzf-hist
Open `fzf` for all valid history entries, if available.
.TP
.B \-H, --hist-status
Display the current status of history logging.
.IP
This includes whether history logging is enabled, the location of the history log file, and the maximum size (number of entries) allowed by the log.
.TP
.B \-L, --list-freq
List historic paths by frequency with pagination, descending order.
.TP
.B \-R, --fzf-recent
Open `fzf` to display recent valid paths filtered by \fI<integer>(min|h|d|m)\fR.

Supported time units:
.br
- min: minutes
.br
- h: hours
.br
- d: days
.br
- m: months (approx. 30 days per month)

If no argument is provided, defaults to '1h'. If only an integer is provided, it assumes the unit is hours.
.TP
.B \-S, --size
Display the status of history logging, including a bar graph, percentage of usage, and the number of entries relative to the total capacity.

The total capacity is determined by the \fB_UP_HISTSIZE\fR environment variable, which specifies the maximum number of entries that can be stored in the history log file.
.TP
.B \-c, --clear
Clear history entries filtered by \fI<integer>(min|h|d|m)\fR.

Supported time units:
.br
- min: minutes
.br
- h: hours
.br
- d: days
.br
- m: months (approx. 30 days per month)

If no argument is provided, all history entries will be removed.
.TP
.B \-j, --jump-hist
Jump to a path in history by its most recent index. Use this option in conjunction with \fB-l, --list-hist\fR for obtaining index values.
.TP
.B \-l, --list-hist
List the history of paths with index, human-readable timestamps, and pagination, ordered by recency.
.TP
.B \-m, --fzf-freq
Open `fzf` to browse and jump into the most frequently visited historic paths.

Note: Visit counts are not displayed in this view. To see the visit counts, use the \fB-L, --list-freq\fR option.
.TP
.B \-p, --prune-hist
Remove missing paths from history.
.SH HISTORY LOG FILE
The history log file is a plain text file that tracks recently accessed paths and their associated human-readable timestamps. Each entry in the log follows the format:
.IP
\fBYYYY-MM-DD HH:MM:SS /absolute/path/to/resource\fR
.PP
The purpose of history logging is to track recently accessed paths, enabling efficient navigation and recall of frequently or recently visited locations. This feature enhances usability by integrating `fzf` with options such as \fB\-R\fR (recent) and \fB\-m\fR (frequent) for quick access to relevant paths.
.PP
.SS Why Plain Text?
The primary benefits of using a plain text file is to prioritize simplicity, portability, and accessibility:
.IP \(bu 2
\fBSimplicity\fR: Plain text files are easy to manage, edit, and inspect without requiring specialized tools or libraries.
.IP \(bu 2
\fBPortability\fR: Users can transfer history logs between systems without concerns about database compatibility or dependencies.
.IP \(bu 2
\fBTransparency\fR: Plain text ensures the log is human-readable, making it straightforward to debug or modify.
.IP \(bu 2
\fBInteroperability\fR: Works seamlessly with standard command-line tools like \fBgrep\fR, \fBawk\fR, and \fBsed\fR for advanced processing and analysis.
.IP \(bu 2
\fBDisposability\fR: Plain text logs are lightweight and easy to clear or reset, aligning with the transient nature of directory navigation. Most users do not need to preserve long-term path usage history.
.PP
.SS Environment Variables
The following environment variables control how the history log behaves:
.IP \(bu 2
\fB_UP_ENABLE_HIST\fR: By default history is not logged, you must add this line to your shell configuration to enable:
.IP
export _UP_ENABLE_HIST=true
.IP \(bu 2
\fB_UP_HISTFILE\fR: Specifies the path to the history log file. Defaults to \fB~/.cache/up_history.log\fR.
.IP \(bu 2
\fB_UP_HISTSIZE\fR: Determines the maximum number of entries that can be stored in the log file. Once the limit is reached, the oldest entries are removed to make space for new ones. Defaults to 250 entries/lines.
.SS Accessing History
Users can clear or filter the log file using the \fB\-R\fR or \fB\-\-fzf-recent\fR option, as well as by specific timeframe arguments (e.g., '1h' for one hour or '15min' for 15 minutes).
.PP
For further details on managing the history log, refer to the relevant option and environment variable descriptions.
.SH EXAMPLES: PWD NAVIGATION
.TP
.B up
Jump to parent directory.
.TP
.B up 2
Jump two levels up in the directory tree.
.TP
.B up ~
Go to HOME path regardless of PWD.
.TP
.B up \-
Go to previous path (\fBOLDPWD\fR).
.TP
.B up <tab>
Display completion list of ancestor directories.
.TP
.B up -r src
Jump to nearest directory matching 'src' (regex).
.TP
.B up -ir 'logs$'
Jump to nearest directory ending with 'logs' (ignore case).
.TP
.B up -eiv logs
Equivalent to previous example but with verbose output.
.TP
.SH EXAMPLES: PATH HISTORY MANAGEMENT
.B up -j 20
Jump to the the 20th most recent path in history.
.TP
.B up -R 10min
Open `fzf` for valid paths accessed in the last 10 minutes.
.TP
.B up -R
Open `fzf` for valid paths accessed in the last hour, default behavior with no argument.
.TP
.B up -R 2
Open `fzf` for valid paths accessed in the two hours, default behavior with only integer argument.
.TP
.B up --clear
Remove all history entries.
.TP
.B up -c 2d
Remove history entries older than 2 days.
.SH EDGE CASES
If the directory name is an integer or matches an option, append \fB/\fR.

For example:
.TP
To jump to a directory named \fB0\fR, use \fBup 0/\fR.
.TP
To jump to directories named \fB\-h\fR or \fB--help\fR, use \fB\-h/\fR or \fB--help/\fR.
.SH DEPENDENCIES
.TP
.B eza, fzf, ls, stat, tree
Optional dependencies for interactive fuzzy finding.

If `eza` is not available, `ls` and `tree` are the default tools utilized by `fzf` options for path inspection within the preview window.

The uutils coreutils (`ustat`) and GNU coreutils (`gstat`) versions of `stat` are preferred over BSD variants for readability.
.TP
.B awk, perl, sed, sort, tac, tr, uniq
Standard tools used for processing history files and transforming text.
.TP
.B bat, less, more, most
Tools used for paginated outputs when viewing history listings, such as those generated by the \fB\-l\fR and \fB\-L\fR options. The tools are listed in order of preference.
.TP
.B ANSI-compatible terminal with Nerd Fonts
Recommended for styled output and icon rendering of default `fzf` options, specifically for previews and headings.

While most of the following terminal emulators have not been tested with these scripts, they are reportedly compatible with Nerd Fonts:
.RS 10
.IP \(bu 2
\fBAlacritty\fR: A lightweight and fast terminal emulator that fully supports Nerd Fonts.
.IP \(bu 2
\fBGNOME Terminal\fR: The default terminal for GNOME, which can display Nerd Fonts with proper configuration.
.IP \(bu 2
\fBiTerm2\fR: A highly customizable terminal emulator for macOS, offering full Nerd Fonts support.
.IP \(bu 2
\fBKitty\fR: A GPU-accelerated terminal emulator with advanced support for Nerd Fonts.
.IP \(bu 2
\fBKonsole\fR: The default terminal emulator for KDE, supporting Nerd Fonts out of the box.
.IP \(bu 2
\fBWezTerm\fR: A modern terminal emulator with GPU acceleration and extensive font support.
.IP \(bu 2
\fBWindows Terminal\fR: A modern terminal emulator for Windows with complete Nerd Fonts compatibility.
.RE
.IP
Note: The default Terminal application on macOS does not support Nerd Fonts. To use Nerd Fonts, consider installing one of the terminal emulators above. For more details on configuring Nerd Fonts, visit:
.IP
\fBhttps://www.nerdfonts.com\fR
.SH TAB COMPLETION SETUP
To enable tab completion for \fBup\fR, source the \fBup_completion.bash\fR script in your shell configuration file.

Add the following line to your \fB.bashrc\fR or \fB.zshrc\fR file:
.TP
source /path/to/up_completion.bash
.TP
Reload your shell configuration by sourcing your shell configuration file, e.g., `source ~/.bashrc`, or relaunch terminal.
.SH ENVIRONMENT VARIABLES
.TP
.B _UP_ALWAYS_VERBOSE
Always print change directory information (Default: false).

To enable persistent verbose output, use: export _UP_ALWAYS_VERBOSE=true
.TP
.B _UP_ALWAYS_IGNORE_CASE
Enable case-insensitive regex by default (Default: false).

To enable, use: export _UP_ALWAYS_IGNORE_CASE=true
.TP
.SH PWD ENVIRONMENT VARIABLES
.TP
.B _UP_FZF_PWDOPTS
Set `fzf` options for current working directory (as an array).
.TP
.B _UP_REGEX_DEFAULT
Use regex as default instead of exact matches (Default: false).

To enable regex searches for ancestor directory names, use: export _UP_REGEX_DEFAULT=true
.TP
.SH PATH HISTORY ENVIRONMENT VARIABLES
.TP
.B _UP_ENABLE_HIST
Enable history file (Default: false).

To enable history logging, use: export _UP_ENABLE_HIST=true
.TP
.B _UP_FZF_HISTOPTS
Set `fzf` options for history (as an array).
.TP
.B _UP_HISTFILE
Path to the history file (Default: $HOME/.cache/up_history.log).
.TP
.B _UP_HISTSIZE
Maximum number of history entries (Default: 250)
.TP
.SH OUTPUT ENVIRONMENT VARIABLES
.TP
.B _UP_DIR_CHANGE_STYLE
Set ANSI styling for the number of directories jumped.
.TP
.B _UP_ERR_STYLE
Set ANSI styling for error message output.
.TP
.B _UP_NO_STYLES
Disable all output styling (Default: false).

To disable output styling, use: export _UP_NO_STYLES=true
.TP
.B _UP_OLDPWD_STYLE
Set ANSI styling for the previous directory (\fBOLDPWD\fR).
.TP
.B _UP_PWD_STYLE
Set ANSI styling for the current directory (\fBPWD\fR).
.TP
.B _UP_REGEX_STYLE
Set ANSI styling for regex patterns.
.SH RELATED COMMANDS
.TP
.B ph
A wrapper function for up, focusing on path history navigation.
.TP
.B up_passthru
A background helper function that captures directory changes triggered by commands like `cd`, `zoxide`, `jump`, etc.
.IP
To use this function, alias the desired commands:
.IP
alias cd='passthru cd' # cd support
.br
alias z='passthru z'   # zoxide support
.IP
Note: To skip history logging with `cd`, use the command:
.IP
builtin cd -- <path>
.P
To enable these functions, use:
.TP
\fBexport _UP_ENABLE_HIST=true\fR
.TP
History-related functions are not sourced when _UP_ENABLE_HIST is not exported.
.SH TIPS AND TRICKS
.TP
.B Customize Default Behaviors
.IP \(bu 2
Use the \fB_UP_ENABLE_HIST\fR environment variable to enable or disable history logging.
.IP \(bu 2
Adjust the maximum history size with \fB_UP_HISTSIZE\fR to suit your usage needs (e.g., increase the limit for longer path histories).
.IP \(bu 2
By enabling \fB_UP_REGEX_DEFAULT\fR, ancestor directories are matched using regex patterns by default instead of exact names.

.TP
.B Combine Options for Flexibility
.IP \(bu 2
Combine \fB\-i\fR and \fB\-r\fR for case-insensitive regex searches (e.g., \fBup \-ir 'src$'\fR).
.IP \(bu 2
Use \fB\-e\fR or \fB\-s\fR with \fB\-x\fR to jump directly to directories based on specific patterns.

.TP
.B Create Aliases for Common Tasks
.IP \(bu 2
Speed up navigation by defining aliases in your shell configuration file. For example:
.IP
\fBalias u="up -ri"\fR # Jump to regex match, ignore case
.br
\fBalias freq="up -m"\fR # Open most frequent paths in `fzf`
.br
\fBalias recentdir="up -R 1d"\fR # List paths from the last day

.TP
.B Debug Directory Selection
.IP \(bu 2
Use the \fB\-v\fR option with any navigation command to print additional path information about the matching process.

.TP
.B Tab Completion
.IP \(bu 2
Enable tab completion for faster navigation. Source the provided \fBup_completion.bash\fR script in your shell configuration file (see TAB COMPLETION SETUP).
.SH SEE ALSO
\fBcd(1)\fR, \fBfzf(1)\fR, \fBeza(1)\fR, \fBstat(1)\fR, \fBtree(1)\fR

For more information on related tools, visit:

https://github.com/eza-community/eza

https://github.com/junegunn/fzf

https://github.com/Old-Man-Programmer/tree
.SH LICENSE
This project is licensed under the MIT License.

Detailed licensing information can be found in the LICENSE file included in the repository or by visiting:
https://opensource.org/licenses/MIT
.SH BUGS AND KNOWN ISSUES
The accompanying tab completion script lacks support for color formatting and consistent ordering due to limitations in shell completion frameworks.

Report issues or suggestions for improvement at:

https://github.com/LittleWalter/up/issues
.SH AUTHOR
LittleWalter

Source code: https://github.com/LittleWalter/up
